#!/bin/bash
from_file="$1"
to_file="$2"
shift_h=$3
shift_m=$4
shift_s=$5
shift_ms=$6

function handleTimestamp {
    # Split into hours, minutes, seconds, and milliseconds
    IFS=':,' read -ra TIME <<< "$1"
    h=${TIME[0]#0}
    m=${TIME[1]#0}
    s=${TIME[2]#0}
    ms=$(echo "${TIME[3]#0}" | tr -d "\r")

    # Calculate new timestamp by adding time
    ms=$((ms + shift_ms))
    if [[ $ms -ge 1000 ]]; then
      s=$((s + 1))
      ms=$((ms - 1000)) 
    elif [[ $ms -lt 0 ]]; then
      s=$((s - 1))
      ms=$((ms + 1000))
    fi

    s=$((s + shift_s))
    if [[ $s -ge 60 ]]; then
      m=$((m + 1))
      s=$((s - 60)) 
    elif [[ $s -lt 0 ]]; then
      m=$((m - 1))
      s=$((s + 60))
    fi

    m=$((m + shift_m))
    if [[ $m -ge 60 ]]; then
      h=$((h + 1))
      m=$((m - 60))
    elif [[ $m -lt 0 ]]; then
      h=$((h - 1))
      m=$((m + 60))
    fi

    h=$((h + shift_h))
    if [[ $h -lt 0 ]]; then # could only happen if we subtract time to less than 00:00:00,000
      h=0
      m=0
      s=0
      ms=0
    fi

    # Reconstruct timestamp string
    printf "%02d:%02d:%02d,%03d" "$h" "$m" $s "$ms"
}

# Loop through each line of the SRT file
while read -r line; do
  # Check if the line contains a timestamp
  if [[ $line =~ [0-9]{2}:[0-9]{2}:[0-9]{2}[,.][0-9]{3} ]]; then
    # Extract the timestamp 
    start=$(echo "$line" | cut -d ' ' -f1)
    end=$(echo "$line" | cut -d ' ' -f3)
    new_start=$(handleTimestamp "$start")
    new_end=$(handleTimestamp "$end")

    # Replace old timestamp with new one
    line=${line/"$start"/"$new_start"}
    line=${line/"$end"/"$new_end"}
  fi

  # Print out modified line
  echo "$line"
done < "$from_file" | tee "$to_file"
